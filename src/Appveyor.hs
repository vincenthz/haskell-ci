module Appveyor where

import           Build
import           Config
import           Utils
import           Stack

import           TextGen.Out
import           Control.Monad

withKey s f = do
    out s >> out ":" >> nl
    withIndent f

listItem = out "- "
keyValue k v = out k >> out ": " >> outNl v
string v = out "\"" >> out v >> out "\""

environment []     []     = pure ()
environment global matrix = withKey "environment" $ do
    unless (null global) $ withKey "global" $ forM_ global $ \(k, v) -> keyValue k v
    unless (null matrix) $ withKey "matrix" $ forM_ matrix $ \buildName -> listItem >> keyValue "BUILD" ("\"" ++ buildName ++ "\"")

toAppveyor :: Digest SHA256 -> C -> String
toAppveyor hash c = runOut $ do
    outNl (yamlAutoGeneratedComment hash) >> nl
    keyValue "version" "{build}"
    keyValue "clone_folder" "C:\\project"
    nl
    environment [] matrix
    nl
    withKey "cache" $ do
        listItem >> string "C:\\SR" >> nl
    keyValue "build" "off"
    withKey "install" $ do
        listItem >> outNl "set PATH=C:\\Program Files\\Git\\mingw64\\bin;%PATH%"
        listItem >> outNl "curl -ostack.zip -L --insecure https://www.stackage.org/stack/windows-i386"
        listItem >> outNl "7z x stack.zip stack.exe"
        listItem >> outNl "refreshenv"

    withKey "test_script" $ do
        listItem >> outNl "echo \"\" | stack --no-terminal build --test"
  where
    matrix = ["lts-10"]
    -- resolved build
    bs = map (resolveBuild c) $ builds c

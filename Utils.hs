{-# LANGUAGE OverloadedStrings #-}
module Utils
    ( Digest
    , SHA256
    , readHciHash
    , quitWith
    , yamlAutoGeneratedComment
    , escapeQuote
    , lastMaybe
    ) where

import           Crypto.Hash (hashWith, SHA256(..), Digest)
import qualified Foundation    as F
import qualified Foundation.IO as F
import           System.IO
import           System.Exit

yamlAutoGeneratedComment :: Digest SHA256 -> String
yamlAutoGeneratedComment hash = "# ~*~ auto-generated by haskell-ci with config : " ++ show hash ++ " ~*~"

readHciHash :: IO (Digest SHA256)
readHciHash = hashWith SHA256 <$> F.readFile ".haskell-ci"

quitWith :: String -> IO a
quitWith m = hPutStrLn stderr ("error: " ++ m) >> exitFailure

escapeQuote :: String -> String
escapeQuote [] = []
escapeQuote (x:xs)
    | x == '"'  = '\\' : '"' : escapeQuote xs
    | otherwise = x : escapeQuote xs

lastMaybe :: [a] -> Maybe a
lastMaybe [] = Nothing
lastMaybe l  = Just $ last l
